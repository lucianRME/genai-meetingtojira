{
  "filtering": {
    "total_lines": 12,
    "kept": 12,
    "dropped": 0,
    "use_llm_classifier": false
  },
  "requirements": [
    {
      "id": "REQ-001",
      "title": "Email One-Time Code for Password Reset",
      "description": "Implement a feature that allows users to reset their password using a one-time code sent via email.",
      "acceptance_criteria": [
        "User receives a one-time code via email upon requesting a password reset.",
        "The one-time code expires after 10 minutes.",
        "User can successfully reset the password using a valid one-time code."
      ],
      "priority": "High",
      "epic": "Password Reset Enhancement"
    },
    {
      "id": "REQ-002",
      "title": "Rate Limiting for Password Reset Attempts",
      "description": "Introduce rate limiting to restrict the number of password reset attempts to enhance security.",
      "acceptance_criteria": [
        "A user can attempt password reset a maximum of 3 times per hour.",
        "Further attempts within the hour are blocked with an appropriate error message.",
        "Rate limit resets after one hour from the first attempt."
      ],
      "priority": "High",
      "epic": "Password Reset Enhancement"
    },
    {
      "id": "REQ-003",
      "title": "Audit Event for Successful Password Reset",
      "description": "Log an audit event whenever a password is successfully reset to maintain a security trail.",
      "acceptance_criteria": [
        "An audit event is generated upon successful password reset.",
        "The audit event includes the user ID and timestamp of the reset.",
        "Audit logs are accessible for verification purposes."
      ],
      "priority": "Medium",
      "epic": "Security and Compliance"
    }
  ],
  "test_cases": [
    {
      "requirement_id": "REQ-001",
      "scenario_type": "positive",
      "gherkin": "Scenario: User receives a one-time code via email Given a user requests a password reset When the request is processed Then the user receives a one-time code via email",
      "tags": [
        "@positive"
      ],
      "gherkin_valid": true
    },
    {
      "requirement_id": "REQ-001",
      "scenario_type": "negative",
      "gherkin": "Scenario: One-time code expires after 10 minutes Given a user receives a one-time code via email When 10 minutes have passed Then the one-time code is no longer valid",
      "tags": [
        "@negative"
      ],
      "gherkin_valid": true
    },
    {
      "requirement_id": "REQ-001",
      "scenario_type": "regression",
      "gherkin": "Scenario: User resets password with valid one-time code Given a user has a valid one-time code When the user enters the code to reset the password Then the password is successfully reset",
      "tags": [
        "@regression"
      ],
      "gherkin_valid": true
    },
    {
      "requirement_id": "REQ-002",
      "scenario_type": "positive",
      "gherkin": "Scenario: User attempts password reset within limit Given a user has attempted password reset twice When the user attempts a third password reset Then the attempt is allowed",
      "tags": [
        "@positive"
      ],
      "gherkin_valid": true
    },
    {
      "requirement_id": "REQ-002",
      "scenario_type": "negative",
      "gherkin": "Scenario: User exceeds password reset attempt limit Given a user has attempted password reset three times When the user attempts a fourth password reset Then the attempt is blocked with an error message",
      "tags": [
        "@negative"
      ],
      "gherkin_valid": true
    },
    {
      "requirement_id": "REQ-002",
      "scenario_type": "regression",
      "gherkin": "Scenario: Rate limit resets after one hour Given a user has reached the password reset attempt limit When one hour has passed since the first attempt Then the user can attempt password reset again",
      "tags": [
        "@regression"
      ],
      "gherkin_valid": true
    },
    {
      "requirement_id": "REQ-003",
      "scenario_type": "positive",
      "gherkin": "Scenario: Audit event generated on successful password reset Given a user successfully resets their password When the reset is completed Then an audit event is generated",
      "tags": [
        "@positive"
      ],
      "gherkin_valid": true
    },
    {
      "requirement_id": "REQ-003",
      "scenario_type": "negative",
      "gherkin": "Scenario: No audit event for failed password reset Given a user fails to reset their password When the reset attempt is unsuccessful Then no audit event is generated",
      "tags": [
        "@negative"
      ],
      "gherkin_valid": true
    },
    {
      "requirement_id": "REQ-003",
      "scenario_type": "regression",
      "gherkin": "Scenario: Audit event includes user ID and timestamp Given a user successfully resets their password When the audit event is generated Then the event includes the user ID and timestamp",
      "tags": [
        "@regression"
      ],
      "gherkin_valid": true
    }
  ]
}