LinkedRequirement,ScenarioType,Gherkin,Tags
REQ-001,positive,Scenario: User receives a one-time code via email Given a user requests a password reset When the request is processed Then the user receives a one-time code via email,"[""@positive""]"
REQ-001,negative,Scenario: One-time code expires after 10 minutes Given a user requests a password reset When 10 minutes have passed Then the one-time code expires,"[""@negative""]"
REQ-001,regression,Scenario: User resets password using a valid one-time code Given a user has a valid one-time code When the user enters the code to reset the password Then the password is successfully reset,"[""@regression""]"
REQ-002,positive,Scenario: User successfully resets password with a valid OTP Given a user has a valid OTP When the user enters the OTP Then the password is successfully reset,"[""@positive""]"
REQ-002,negative,Scenario: User fails to reset password with an expired OTP Given a user has an expired OTP When the user enters the OTP Then the password reset fails,"[""@negative""]"
REQ-002,regression,Scenario: User fails to reset password with an invalid OTP Given a user has an invalid OTP When the user enters the OTP Then the password reset fails,"[""@regression""]"
REQ-003,positive,Scenario: User can attempt password reset a maximum of 3 times per hour Given a user attempts password reset When the user attempts 3 times Then the user can no longer attempt within the hour,"[""@positive""]"
REQ-003,negative,Scenario: User receives an error message after exceeding maximum attempts Given a user has attempted password reset 3 times When the user attempts again Then an error message is displayed,"[""@negative""]"
REQ-003,regression,Scenario: Rate limiting resets after one hour Given a user has reached the maximum attempts When one hour has passed Then the user can attempt password reset again,"[""@regression""]"
REQ-004,positive,Scenario: An audit event is created upon successful password reset Given a user successfully resets their password When the reset is completed Then an audit event is created,"[""@positive""]"
REQ-004,negative,Scenario: Audit event includes user ID and timestamp Given a user successfully resets their password When the audit event is logged Then it includes the user ID and timestamp,"[""@negative""]"
REQ-004,regression,Scenario: Audit logs are accessible for verification purposes Given a password reset has occurred When accessing the audit logs Then the logs are available for verification,"[""@regression""]"
REQ-001,positive,Scenario: User receives a one-time code via email for password reset Given a user requests a password reset When the request is processed Then the user receives a one-time code via email,"[""@positive""]"
REQ-001,negative,Scenario: One-time code expires after 10 minutes Given a user receives a one-time code When 10 minutes have passed Then the one-time code is no longer valid,"[""@negative""]"
REQ-001,regression,Scenario: User can reset password using a valid one-time code Given a user has a valid one-time code When the user enters the code to reset the password Then the password is successfully reset,"[""@regression""]"
REQ-002,positive,Scenario: Successful OTP verification Given a user has a valid OTP When the user enters the OTP Then the OTP verification is successful,"[""@positive""]"
REQ-002,negative,Scenario: Expired OTP verification Given a user has an expired OTP When the user enters the OTP Then the OTP verification fails,"[""@negative""]"
REQ-002,regression,Scenario: Invalid OTP verification Given a user enters an invalid OTP When the OTP is processed Then the OTP verification fails,"[""@regression""]"
REQ-003,positive,Scenario: User is limited to 3 OTP attempts per hour Given a user attempts to enter OTP When the user reaches the 3rd attempt Then the user is limited from further attempts,"[""@positive""]"
REQ-003,negative,Scenario: Exceeding OTP attempt limit Given a user has exceeded 3 OTP attempts When the user tries another attempt Then the user receives an error message,"[""@negative""]"
REQ-003,regression,Scenario: Rate limiting is logged Given a user exceeds OTP attempts When the event is logged Then the log contains the rate limiting information,"[""@regression""]"
REQ-004,positive,Scenario: Audit event generated upon successful password reset Given a user successfully resets their password When the reset is completed Then an audit event is generated,"[""@positive""]"
REQ-004,negative,Scenario: Missing audit event after password reset Given a user successfully resets their password When no audit event is generated Then the system logs an error,"[""@negative""]"
REQ-004,regression,Scenario: Audit event includes user ID and timestamp Given an audit event is generated When the event is stored Then it includes user ID and timestamp,"[""@regression""]"
REQ-005,positive,Scenario: Existing login functionality is tested Given the existing login flow When regression tests are conducted Then the login functionality passes,"[""@positive""]"
REQ-005,negative,Scenario: New issues introduced in login flow Given the new password reset feature is implemented When regression tests are conducted Then no new issues are introduced,"[""@negative""]"
REQ-005,regression,Scenario: Regression test results are documented Given regression tests are completed When the results are reviewed Then the results are documented,"[""@regression""]"
REQ-001,positive,Scenario: User receives a one-time code via email for password reset Given a user requests a password reset When the request is processed Then the user receives a one-time code via email,"[""@positive""]"
REQ-001,negative,Scenario: One-time code expires after 10 minutes Given a user receives a one-time code When 10 minutes have passed Then the one-time code is no longer valid,"[""@negative""]"
REQ-001,regression,Scenario: User can reset password using a valid one-time code Given a user has a valid one-time code When the user enters the code to reset the password Then the password is successfully reset,"[""@regression""]"
REQ-002,positive,Scenario: Successful OTP verification Given a user has a valid OTP When the user enters the OTP Then the OTP is verified successfully,"[""@positive""]"
REQ-002,negative,Scenario: Expired OTP scenario Given a user has an expired OTP When the user enters the OTP Then the OTP verification fails,"[""@negative""]"
REQ-002,regression,Scenario: Invalid OTP scenario Given a user enters an invalid OTP When the OTP is processed Then the OTP verification fails,"[""@regression""]"
REQ-003,positive,Scenario: User cannot attempt password reset more than 3 times per hour Given a user has attempted password reset 3 times When the user attempts a fourth reset Then the system prevents the reset attempt,"[""@positive""]"
REQ-003,negative,Scenario: System logs an attempt each time a user requests a password reset Given a user requests a password reset When the request is processed Then the system logs the attempt,"[""@negative""]"
REQ-003,regression,Scenario: User receives a notification when the rate limit is reached Given a user has reached the rate limit for password resets When the user attempts another reset Then the user receives a notification about the rate limit,"[""@regression""]"
REQ-004,positive,Scenario: Audit event is generated upon successful password reset Given a user successfully resets their password When the reset is completed Then an audit event is generated,"[""@positive""]"
REQ-004,negative,Scenario: Audit event includes user ID and timestamp Given an audit event is generated When the event is logged Then it includes the user ID and timestamp,"[""@negative""]"
REQ-004,regression,Scenario: Audit event is accessible in system logs Given an audit event is generated When the system logs are accessed Then the audit event is present in the logs,"[""@regression""]"
REQ-005,positive,Scenario: Existing login functionality remains unchanged Given the login system is operational When a user logs in Then the login is successful,"[""@positive""]"
REQ-005,negative,Scenario: No new errors are introduced in the login process Given the login system is tested When a user logs in Then no new errors occur,"[""@negative""]"
REQ-005,regression,Scenario: All existing login test cases pass successfully Given existing login test cases When they are executed Then all test cases pass,"[""@regression""]"
REQ-001,positive,Scenario: User receives a one-time code via email Given a user requests a password reset When the request is submitted Then the user receives a one-time code via email,"[""@positive""]"
REQ-001,negative,Scenario: One-time code expires after 10 minutes Given a user receives a one-time code via email When 10 minutes have passed Then the one-time code is expired,"[""@negative""]"
REQ-001,regression,Scenario: User can reset the password using a valid one-time code Given a user has a valid one-time code When the user enters the code to reset the password Then the password is successfully reset,"[""@regression""]"
REQ-002,positive,Scenario: OTP is accepted and password reset is successful Given a user has a valid OTP When the user enters the OTP Then the password reset is successful,"[""@positive""]"
REQ-002,negative,Scenario: Expired OTP is rejected Given a user has an expired OTP When the user enters the OTP Then the OTP is rejected,"[""@negative""]"
REQ-002,regression,Scenario: Invalid OTP is rejected Given a user has an invalid OTP When the user enters the OTP Then the OTP is rejected,"[""@regression""]"
REQ-003,positive,Scenario: User can attempt password reset a maximum of 3 times per hour Given a user attempts to reset the password When the user makes 3 attempts within an hour Then the attempts are allowed,"[""@positive""]"
REQ-003,negative,Scenario: Further attempts are blocked after 3 unsuccessful tries within an hour Given a user has made 3 unsuccessful password reset attempts When the user tries again within the same hour Then the attempt is blocked,"[""@negative""]"
REQ-003,regression,Scenario: User is notified when rate limit is reached Given a user has reached the rate limit for password reset attempts When the user tries to reset the password again Then the user is notified of the rate limit,"[""@regression""]"
REQ-004,positive,Scenario: An audit event is created upon successful password reset Given a user successfully resets their password When the reset is completed Then an audit event is created,"[""@positive""]"
REQ-004,negative,Scenario: Audit event includes user ID and timestamp of the reset Given a successful password reset When the audit event is logged Then the event includes user ID and timestamp,"[""@negative""]"
REQ-004,regression,Scenario: Audit logs are accessible for verification purposes Given an audit event is created When accessing the audit logs Then the logs are accessible for verification,"[""@regression""]"
REQ-001,positive,Scenario: User receives a one-time code via email Given a user requests a password reset When the request is processed Then the user receives a one-time code via email,"[""@positive""]"
REQ-001,negative,Scenario: One-time code expires after 10 minutes Given a user receives a one-time code When 10 minutes have passed Then the one-time code is expired,"[""@negative""]"
REQ-001,regression,Scenario: User resets password using valid one-time code Given a user has a valid one-time code When the user enters the code to reset the password Then the password is successfully reset,"[""@regression""]"
REQ-002,positive,Scenario: Successful OTP verification Given a user has a valid OTP When the user enters the OTP Then the OTP verification is successful,"[""@positive""]"
REQ-002,negative,Scenario: Expired OTP verification fails Given a user has an expired OTP When the user enters the OTP Then the OTP verification fails,"[""@negative""]"
REQ-002,regression,Scenario: Invalid OTP verification fails Given a user has an invalid OTP When the user enters the OTP Then the OTP verification fails,"[""@regression""]"
REQ-003,positive,Scenario: User is restricted to 3 password reset attempts Given a user has made 3 password reset attempts When the user tries another reset Then the user is restricted from further attempts,"[""@positive""]"
REQ-003,negative,Scenario: Notification on reaching rate limit Given a user has reached the rate limit When the user attempts another reset Then the user receives a notification,"[""@negative""]"
REQ-003,regression,Scenario: Attempts beyond limit are logged Given a user exceeds the rate limit When the user attempts another reset Then the attempt is logged for monitoring,"[""@regression""]"
REQ-004,positive,Scenario: Audit event generated on successful password reset Given a user successfully resets their password When the reset is completed Then an audit event is generated,"[""@positive""]"
REQ-004,negative,Scenario: Audit event contains necessary details Given an audit event is generated When the event is logged Then the event contains necessary details for tracking,"[""@negative""]"
REQ-004,regression,Scenario: Audit event is visible in logs Given an audit event is generated When the logs are checked Then the event is visible for verification,"[""@regression""]"
REQ-005,positive,Scenario: Existing login functionality passes all cases Given the existing login functionality When regression tests are conducted Then all cases pass,"[""@positive""]"
REQ-005,negative,Scenario: No new issues in login flow Given the password reset feature is implemented When the login flow is tested Then no new issues are introduced,"[""@negative""]"
REQ-005,regression,Scenario: Regression test results are documented Given regression tests are conducted When the tests are completed Then the results are documented and reviewed,"[""@regression""]"
REQ-001,positive,Scenario: User receives a one-time code via email Given a user requests a password reset When the request is processed Then the user receives a one-time code via email,"[""@positive""]"
REQ-001,negative,Scenario: One-time code expires after 10 minutes Given a user receives a one-time code via email When 10 minutes have passed Then the one-time code is expired,"[""@negative""]"
REQ-001,regression,Scenario: User can reset password using a valid one-time code Given a user has a valid one-time code When the user enters the code to reset the password Then the password is successfully reset,"[""@regression""]"
REQ-002,positive,Scenario: System verifies a valid OTP within expiration time Given a user has a valid OTP When the user enters the OTP within expiration time Then the system verifies the OTP successfully,"[""@positive""]"
REQ-002,negative,Scenario: System rejects an expired OTP Given a user has an expired OTP When the user enters the OTP Then the system rejects the OTP with an error message,"[""@negative""]"
REQ-002,regression,Scenario: System rejects an invalid OTP Given a user enters an invalid OTP When the system processes the OTP Then the system rejects the OTP with an error message,"[""@regression""]"
REQ-003,positive,Scenario: User can attempt password reset 3 times per hour Given a user attempts password reset When the user has not exceeded 3 attempts in an hour Then the system allows the password reset attempt,"[""@positive""]"
REQ-003,negative,Scenario: System blocks further attempts after 3 failed attempts Given a user has failed 3 password reset attempts in an hour When the user attempts another reset Then the system blocks the attempt with an error message,"[""@negative""]"
REQ-003,regression,Scenario: Appropriate error message when rate limit is exceeded Given a user exceeds the password reset attempt limit When the user tries another reset Then the system displays an appropriate error message,"[""@regression""]"
REQ-004,positive,Scenario: Audit event generated upon successful password reset Given a user successfully resets their password When the reset is completed Then an audit event is generated,"[""@positive""]"
REQ-004,negative,Scenario: Audit event contains user ID and timestamp Given an audit event is generated When the event is logged Then it contains the user ID and timestamp,"[""@negative""]"
REQ-004,regression,Scenario: Audit event is accessible in system logs Given a password reset has occurred When the audit event is generated Then it is accessible in the system logs,"[""@regression""]"
REQ-001,positive,Scenario: User receives a one-time code via email Given a user requests a password reset When the request is submitted Then the user receives a one-time code via email,"[""@positive""]"
REQ-001,negative,Scenario: One-time code expires after 10 minutes Given a user receives a one-time code When 10 minutes have passed Then the one-time code is expired,"[""@negative""]"
REQ-001,regression,Scenario: User resets password with a valid one-time code Given a user has a valid one-time code When the user enters the code to reset the password Then the password is successfully reset,"[""@regression""]"
REQ-002,positive,Scenario: User successfully resets password with a valid OTP Given a user has a valid OTP When the user enters the OTP Then the password is successfully reset,"[""@positive""]"
REQ-002,negative,Scenario: User fails to reset password with an expired OTP Given a user has an expired OTP When the user enters the OTP Then the password reset fails,"[""@negative""]"
REQ-002,regression,Scenario: User fails to reset password with an invalid OTP Given a user has an invalid OTP When the user enters the OTP Then the password reset fails,"[""@regression""]"
REQ-003,positive,Scenario: User can attempt password reset 3 times per hour Given a user attempts a password reset When the user makes 3 attempts within an hour Then the attempts are allowed,"[""@positive""]"
REQ-003,negative,Scenario: User exceeds maximum password reset attempts Given a user has made 3 password reset attempts When the user tries a fourth attempt within an hour Then the attempt is blocked and a notification is sent,"[""@negative""]"
REQ-003,regression,Scenario: Further attempts are blocked until rate limit resets Given a user has exceeded the password reset attempts When the rate limit period has not yet reset Then further attempts are blocked,"[""@regression""]"
REQ-004,positive,Scenario: Audit event is generated upon successful password reset Given a user successfully resets their password When the reset is completed Then an audit event is generated,"[""@positive""]"
REQ-004,negative,Scenario: Audit event is not generated for failed password reset Given a user fails to reset their password When the reset attempt is made Then no audit event is generated,"[""@negative""]"
REQ-004,regression,Scenario: Audit event includes user ID and timestamp Given a successful password reset When the audit event is generated Then it includes the user's ID and timestamp,"[""@regression""]"
REQ-005,positive,Scenario: Existing login functionality remains unchanged Given the login flow is tested When the user logs in Then the login is successful,"[""@positive""]"
REQ-005,negative,Scenario: No new errors are introduced in the login process Given the login flow is tested When the user logs in Then no new errors occur,"[""@negative""]"
REQ-005,regression,Scenario: All existing login test cases pass successfully Given the existing login test cases When they are executed Then all test cases pass,"[""@regression""]"
REQ-001,positive,Scenario: User receives OTP via email for password reset Given a user requests a password reset When the request is processed Then the user receives a one-time code via email,"[""@positive""]"
REQ-001,negative,Scenario: User does not receive OTP due to invalid email Given a user requests a password reset with an invalid email When the request is processed Then the user does not receive a one-time code,"[""@negative""]"
REQ-001,regression,Scenario: OTP expires after 10 minutes Given a user receives a one-time code When 10 minutes have passed Then the one-time code is no longer valid,"[""@regression""]"
REQ-002,positive,Scenario: Successful OTP verification Given a user has a valid OTP When the user enters the OTP Then the OTP is verified successfully,"[""@positive""]"
REQ-002,negative,Scenario: Expired OTP handling Given a user has an expired OTP When the user enters the OTP Then the system rejects the OTP,"[""@negative""]"
REQ-002,regression,Scenario: Invalid OTP handling Given a user enters an invalid OTP When the OTP is processed Then the system displays an error message,"[""@regression""]"
REQ-003,positive,Scenario: Limit OTP requests to 3 per hour Given a user requests an OTP When the user requests more than 3 OTPs in an hour Then the system prevents further requests,"[""@positive""]"
REQ-003,negative,Scenario: Exceeding OTP request limit Given a user has exceeded the OTP request limit When the user requests another OTP Then the system shows a limit exceeded message,"[""@negative""]"
REQ-003,regression,Scenario: Rate limit resets after one hour Given a user has reached the OTP request limit When one hour has passed Then the user can request OTPs again,"[""@regression""]"
REQ-004,positive,Scenario: Audit event logged on successful password reset Given a user resets their password successfully When the reset is completed Then an audit event is logged with timestamp and user ID,"[""@positive""]"
REQ-004,negative,Scenario: Audit event not logged on failed password reset Given a user fails to reset their password When the reset attempt is made Then no audit event is logged,"[""@negative""]"
REQ-004,regression,Scenario: Audit event accessible in system logs Given a successful password reset occurs When the system logs are checked Then the audit event is present in the logs,"[""@regression""]"
REQ-005,positive,Scenario: Existing login functionality remains unchanged Given the login feature is used When a user logs in Then the login process completes successfully,"[""@positive""]"
REQ-005,negative,Scenario: New errors introduced in login process Given the login feature is used When a user logs in Then no new errors occur during login,"[""@negative""]"
REQ-005,regression,Scenario: All existing login test cases pass Given the login feature is tested When all test cases are executed Then all existing login test cases pass successfully,"[""@regression""]"
REQ-001,positive,Scenario: User receives a one-time code via email Given a user requests a password reset When the request is processed Then the user receives a one-time code via email,"[""@positive""]"
REQ-001,negative,Scenario: One-time code expires after 10 minutes Given a user receives a one-time code When 10 minutes have passed Then the one-time code is expired,"[""@negative""]"
REQ-001,regression,Scenario: User resets password with valid one-time code Given a user has a valid one-time code When the user enters the code to reset the password Then the password is reset successfully,"[""@regression""]"
REQ-002,positive,Scenario: Successful OTP verification Given a user has a valid OTP When the user enters the OTP Then the OTP verification is successful,"[""@positive""]"
REQ-002,negative,Scenario: Expired OTP verification Given a user has an expired OTP When the user enters the OTP Then the OTP verification fails,"[""@negative""]"
REQ-002,regression,Scenario: Invalid OTP verification Given a user has an invalid OTP When the user enters the OTP Then the OTP verification fails,"[""@regression""]"
REQ-003,positive,Scenario: User is restricted to 3 password reset attempts Given a user has made 3 password reset attempts When the user tries a fourth attempt Then the attempt is restricted,"[""@positive""]"
REQ-003,negative,Scenario: Error message when rate limit is exceeded Given a user exceeds the rate limit When the user attempts another password reset Then an error message is displayed,"[""@negative""]"
REQ-003,regression,Scenario: Rate limiting is logged Given a user exceeds the rate limit When the attempt is logged Then the log contains the rate limiting event,"[""@regression""]"
REQ-004,positive,Scenario: Audit event generated on successful password reset Given a user successfully resets their password When the reset is completed Then an audit event is generated,"[""@positive""]"
REQ-004,negative,Scenario: Audit event includes user ID and timestamp Given an audit event is generated When the event is logged Then it includes the user ID and timestamp,"[""@negative""]"
REQ-004,regression,Scenario: Audit event is visible in system logs Given an audit event is generated When the logs are checked Then the event is visible in the system logs,"[""@regression""]"
REQ-005,positive,Scenario: Existing login functionality is tested Given the login flow is tested When the tests are executed Then the functionality passes without issues,"[""@positive""]"
REQ-005,negative,Scenario: No new defects in login flow Given the login flow is tested When the tests are executed Then no new defects are introduced,"[""@negative""]"
REQ-005,regression,Scenario: Regression test results are documented Given the regression tests are completed When the results are reviewed Then the results are documented,"[""@regression""]"
REQ-001,positive,Scenario: User receives OTP via email for password reset Given a user requests a password reset When the request is submitted Then the user receives an OTP via email,"[""@positive""]"
REQ-001,negative,Scenario: OTP expires after 10 minutes Given a user receives an OTP via email When 10 minutes have passed Then the OTP is expired,"[""@negative""]"
REQ-001,regression,Scenario: User resets password using a valid OTP Given a user has a valid OTP When the user enters the OTP Then the user can reset their password,"[""@regression""]"
REQ-002,positive,Scenario: Successful password reset with valid OTP Given a user has a valid OTP When the user enters the OTP Then the password is reset successfully,"[""@positive""]"
REQ-002,negative,Scenario: Failed password reset with expired OTP Given a user has an expired OTP When the user enters the OTP Then the password reset fails,"[""@negative""]"
REQ-002,regression,Scenario: Failed password reset with invalid OTP Given a user has an invalid OTP When the user enters the OTP Then the password reset fails,"[""@regression""]"
REQ-003,positive,Scenario: User attempts password reset within limit Given a user attempts password reset When the attempts are within the limit Then the user can continue to reset password,"[""@positive""]"
REQ-003,negative,Scenario: User exceeds password reset attempt limit Given a user attempts password reset When the attempts exceed the limit Then the user is temporarily blocked,"[""@negative""]"
REQ-003,regression,Scenario: User receives notification on reaching rate limit Given a user attempts password reset When the rate limit is reached Then the user receives a notification,"[""@regression""]"
REQ-004,positive,Scenario: Audit event generated on successful password reset Given a user successfully resets their password When the reset is completed Then an audit event is generated,"[""@positive""]"
REQ-004,negative,Scenario: No audit event for failed password reset Given a user fails to reset their password When the reset attempt is unsuccessful Then no audit event is generated,"[""@negative""]"
REQ-004,regression,Scenario: Audit log includes user ID and timestamp Given a successful password reset When an audit event is generated Then the log includes user ID and timestamp,"[""@regression""]"
REQ-001,positive,Scenario: User receives a one-time code via email Given a user requests a password reset When the request is processed Then the user receives a one-time code via email,"[""@positive""]"
REQ-001,negative,Scenario: One-time code expires after 10 minutes Given a user receives a one-time code via email When 10 minutes have passed Then the one-time code is no longer valid,"[""@negative""]"
REQ-001,regression,Scenario: User resets password with valid one-time code Given a user has a valid one-time code When the user enters the code to reset the password Then the password is successfully reset,"[""@regression""]"
REQ-002,positive,Scenario: User attempts password reset within limit Given a user has attempted password reset twice When the user attempts a third password reset Then the attempt is allowed,"[""@positive""]"
REQ-002,negative,Scenario: User exceeds password reset attempt limit Given a user has attempted password reset three times When the user attempts a fourth password reset Then the attempt is blocked with an error message,"[""@negative""]"
REQ-002,regression,Scenario: Rate limit resets after one hour Given a user has reached the password reset attempt limit When one hour has passed since the first attempt Then the user can attempt password reset again,"[""@regression""]"
REQ-003,positive,Scenario: Audit event generated on successful password reset Given a user successfully resets their password When the reset is completed Then an audit event is generated,"[""@positive""]"
REQ-003,negative,Scenario: No audit event for failed password reset Given a user fails to reset their password When the reset attempt is unsuccessful Then no audit event is generated,"[""@negative""]"
REQ-003,regression,Scenario: Audit event includes user ID and timestamp Given a user successfully resets their password When the audit event is generated Then the event includes the user ID and timestamp,"[""@regression""]"
