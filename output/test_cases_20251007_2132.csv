LinkedRequirement,ScenarioType,Gherkin,Tags
REQ-001,positive,Scenario: User receives OTP for password reset Given a user requests a password reset When the request is submitted Then the user receives an OTP via email,"[""@positive""]"
REQ-001,negative,Scenario: OTP expires after 10 minutes Given a user receives an OTP When 10 minutes have passed Then the OTP is expired and cannot be used,"[""@negative""]"
REQ-001,regression,Scenario: System allows password reset with valid OTP Given a user has a valid OTP When the user enters the OTP Then the system allows the password reset,"[""@regression""]"
REQ-002,positive,Scenario: OTP is accepted when valid and within expiry time Given a user has a valid OTP When the OTP is entered within expiry time Then the OTP is accepted,"[""@positive""]"
REQ-002,negative,Scenario: OTP is rejected when expired Given a user has an expired OTP When the OTP is entered Then the OTP is rejected,"[""@negative""]"
REQ-002,regression,Scenario: OTP is rejected when invalid Given a user has an invalid OTP When the OTP is entered Then the OTP is rejected,"[""@regression""]"
REQ-003,positive,Scenario: System allows up to 3 password reset attempts per hour Given a user requests a password reset When the user makes 3 attempts within an hour Then the system allows the attempts,"[""@positive""]"
REQ-003,negative,Scenario: User is notified when rate limit is reached Given a user has made 3 password reset attempts When the user tries a 4th attempt within an hour Then the user is notified of the rate limit,"[""@negative""]"
REQ-003,regression,Scenario: System logs rate limit violations Given a user exceeds the password reset attempt limit When the limit is violated Then the system logs the violation,"[""@regression""]"
REQ-004,positive,Scenario: Audit event is generated upon successful password reset Given a user successfully resets their password When the reset is completed Then an audit event is generated,"[""@positive""]"
REQ-004,negative,Scenario: Audit event includes user ID and timestamp Given a password reset is successful When the audit event is generated Then it includes the user ID and timestamp,"[""@negative""]"
REQ-004,regression,Scenario: Audit logs are accessible for verification Given an audit event is generated When the logs are accessed Then they are available for verification,"[""@regression""]"
REQ-001,positive,Scenario: User receives an email with a one-time code for password reset Given a user requests a password reset When the request is processed Then the user receives an email with a one-time code,"[""@positive""]"
REQ-001,negative,Scenario: One-time code expires after 10 minutes Given a user receives a one-time code When 10 minutes pass without using the code Then the code is expired and cannot be used,"[""@negative""]"
REQ-001,regression,Scenario: User can reset password using a valid one-time code Given a user has a valid one-time code When the user enters the code to reset the password Then the password is successfully reset,"[""@regression""]"
REQ-002,positive,Scenario: Successful OTP verification Given a user has a valid OTP When the user enters the OTP Then the OTP is verified successfully,"[""@positive""]"
REQ-002,negative,Scenario: Expired OTP scenario Given a user has an expired OTP When the user enters the OTP Then the OTP verification fails,"[""@negative""]"
REQ-002,regression,Scenario: Invalid OTP scenario Given a user enters an invalid OTP When the OTP is processed Then the OTP verification fails,"[""@regression""]"
REQ-003,positive,Scenario: User is restricted to 3 password reset attempts per hour Given a user attempts to reset their password When the user makes 3 attempts within an hour Then further attempts are restricted,"[""@positive""]"
REQ-003,negative,Scenario: Attempts exceeding the limit are blocked Given a user has made 3 password reset attempts in an hour When the user tries a fourth attempt Then the attempt is blocked,"[""@negative""]"
REQ-003,regression,Scenario: User receives a notification when the limit is reached Given a user has reached the password reset attempt limit When the user tries another attempt Then the user receives a notification about the limit,"[""@regression""]"
REQ-004,positive,Scenario: Audit event is generated on successful password reset Given a user successfully resets their password When the reset is completed Then an audit event is generated,"[""@positive""]"
REQ-004,negative,Scenario: Audit event contains relevant user and timestamp information Given an audit event is generated When the event is logged Then it contains user and timestamp information,"[""@negative""]"
REQ-004,regression,Scenario: Audit event is logged in the system for verification Given an audit event is generated When the event is processed Then it is logged in the system,"[""@regression""]"
REQ-005,positive,Scenario: Existing login flow is tested for functionality Given the login flow is executed When the user enters valid credentials Then the user is logged in successfully,"[""@positive""]"
REQ-005,negative,Scenario: No new issues are introduced in the login flow Given the login flow is tested When the new password reset feature is deployed Then no new issues are found in the login flow,"[""@negative""]"
REQ-005,regression,Scenario: Regression test results are documented and reviewed Given regression tests are conducted When the tests are completed Then the results are documented and reviewed,"[""@regression""]"
REQ-001,positive,Scenario: User receives a one-time code via email for password reset Given a user requests a password reset When the request is processed Then the user receives a one-time code via email,"[""@positive""]"
REQ-001,negative,Scenario: User does not receive a one-time code if email is invalid Given a user requests a password reset with an invalid email When the request is processed Then the user does not receive a one-time code,"[""@negative""]"
REQ-001,regression,Scenario: User can reset password using a valid one-time code Given a user has a valid one-time code When the user enters the code to reset the password Then the password is successfully reset,"[""@regression""]"
REQ-002,positive,Scenario: Successful OTP verification Given a user has a valid OTP When the user enters the OTP Then the OTP is successfully verified,"[""@positive""]"
REQ-002,negative,Scenario: OTP verification fails for expired OTP Given a user has an expired OTP When the user enters the OTP Then the OTP verification fails,"[""@negative""]"
REQ-002,regression,Scenario: OTP verification fails for invalid OTP Given a user has an invalid OTP When the user enters the OTP Then the OTP verification fails,"[""@regression""]"
REQ-003,positive,Scenario: User is restricted after 3 password reset attempts Given a user has made 3 password reset attempts in an hour When the user attempts another reset Then the user is restricted from making further attempts,"[""@positive""]"
REQ-003,negative,Scenario: User is not restricted before 3 password reset attempts Given a user has made 2 password reset attempts in an hour When the user attempts another reset Then the user is not restricted,"[""@negative""]"
REQ-003,regression,Scenario: Rate limiting is logged for monitoring Given a user has reached the rate limit for password reset attempts When the rate limit is triggered Then the event is logged for monitoring,"[""@regression""]"
REQ-004,positive,Scenario: Audit event is generated for successful password reset Given a user successfully resets their password When the reset is completed Then an audit event is generated,"[""@positive""]"
REQ-004,negative,Scenario: No audit event for unsuccessful password reset Given a user fails to reset their password When the reset attempt is completed Then no audit event is generated,"[""@negative""]"
REQ-004,regression,Scenario: Audit event includes user ID and timestamp Given a successful password reset When the audit event is generated Then the event includes user ID and timestamp,"[""@regression""]"
REQ-001,positive,Scenario: User receives a one-time code via email Given a user requests a password reset When the request is submitted Then the user receives a one-time code via email,"[""@positive""]"
REQ-001,negative,Scenario: One-time code expires after 10 minutes Given a user receives a one-time code When 10 minutes have passed Then the one-time code is expired,"[""@negative""]"
REQ-001,regression,Scenario: User resets password using a valid one-time code Given a user has a valid one-time code When the user enters the code to reset the password Then the password is successfully reset,"[""@regression""]"
REQ-002,positive,Scenario: OTP is valid and allows password reset Given a user has a valid OTP When the user enters the OTP Then the password reset is allowed,"[""@positive""]"
REQ-002,negative,Scenario: OTP is expired and does not allow password reset Given a user has an expired OTP When the user enters the OTP Then the password reset is not allowed,"[""@negative""]"
REQ-002,regression,Scenario: OTP is invalid and does not allow password reset Given a user has an invalid OTP When the user enters the OTP Then the password reset is not allowed,"[""@regression""]"
REQ-003,positive,Scenario: User can attempt password reset a maximum of 3 times per hour Given a user attempts password reset When the user attempts 3 times within an hour Then the attempts are allowed,"[""@positive""]"
REQ-003,negative,Scenario: Further attempts are blocked after 3 unsuccessful tries within an hour Given a user has attempted password reset 3 times unsuccessfully When the user attempts again within the same hour Then the attempt is blocked,"[""@negative""]"
REQ-003,regression,Scenario: Rate limit resets after one hour from the first attempt Given a user has reached the rate limit When one hour has passed since the first attempt Then the user can attempt password reset again,"[""@regression""]"
REQ-004,positive,Scenario: Audit event is logged when a password reset is successful Given a user successfully resets their password When the reset is completed Then an audit event is logged,"[""@positive""]"
REQ-004,negative,Scenario: Audit event includes user ID and timestamp of the reset Given a password reset is successful When the audit event is logged Then the event includes user ID and timestamp,"[""@negative""]"
REQ-004,regression,Scenario: Audit logs are accessible for verification purposes Given an audit event is logged When a verification is needed Then the audit logs are accessible,"[""@regression""]"
REQ-001,positive,Scenario: User receives a one-time code via email Given a user requests a password reset When the request is submitted Then the user receives a one-time code via email,"[""@positive""]"
REQ-001,negative,Scenario: One-time code expires after 10 minutes Given a user receives a one-time code When 10 minutes have passed Then the one-time code is expired,"[""@negative""]"
REQ-001,regression,Scenario: User resets password with a valid one-time code Given a user has a valid one-time code When the user enters the code to reset the password Then the password is reset successfully,"[""@regression""]"
REQ-002,positive,Scenario: User successfully resets password with a valid OTP Given a user has a valid OTP When the user enters the OTP Then the password is reset successfully,"[""@positive""]"
REQ-002,negative,Scenario: User fails to reset password with an expired OTP Given a user has an expired OTP When the user enters the OTP Then the password reset fails,"[""@negative""]"
REQ-002,regression,Scenario: User fails to reset password with an invalid OTP Given a user has an invalid OTP When the user enters the OTP Then the password reset fails,"[""@regression""]"
REQ-003,positive,Scenario: User attempts password reset within limit Given a user attempts password reset When the attempts are within the limit of 3 per hour Then the password reset is allowed,"[""@positive""]"
REQ-003,negative,Scenario: User exceeds password reset attempt limit Given a user attempts password reset When the attempts exceed the limit of 3 per hour Then the user receives an error message,"[""@negative""]"
REQ-003,regression,Scenario: Rate limit resets after one hour Given a user has exceeded the password reset limit When one hour has passed Then the user can attempt password reset again,"[""@regression""]"
REQ-004,positive,Scenario: Audit event generated on successful password reset Given a user successfully resets their password When the reset is completed Then an audit event is generated,"[""@positive""]"
REQ-004,negative,Scenario: Audit event missing on password reset Given a user successfully resets their password When the reset is completed Then no audit event is generated,"[""@negative""]"
REQ-004,regression,Scenario: Audit event includes user ID and timestamp Given an audit event is generated When a password reset is successful Then the event includes user ID and timestamp,"[""@regression""]"
REQ-001,positive,Scenario: User receives a one-time code via email for password reset Given a user requests a password reset When the request is processed Then the user receives an email with a one-time code,"[""@positive""]"
REQ-001,negative,Scenario: One-time code expires after 10 minutes Given a user receives a one-time code When 10 minutes have passed Then the one-time code is no longer valid,"[""@negative""]"
REQ-001,regression,Scenario: User resets password using a valid one-time code Given a user has a valid one-time code When the user submits the code to reset the password Then the password is successfully reset,"[""@regression""]"
REQ-002,positive,Scenario: User is allowed up to 3 password reset attempts per hour Given a user attempts to reset the password When the user makes 3 attempts within an hour Then the attempts are allowed,"[""@positive""]"
REQ-002,negative,Scenario: User exceeds password reset attempts limit Given a user has made 3 password reset attempts When the user tries a fourth attempt within the same hour Then the user receives an error message,"[""@negative""]"
REQ-002,regression,Scenario: Rate limit resets after one hour Given a user has reached the password reset attempt limit When one hour has passed Then the user can attempt to reset the password again,"[""@regression""]"
REQ-003,positive,Scenario: Audit event is generated for successful password reset Given a user successfully resets their password When the password reset is completed Then an audit event is generated,"[""@positive""]"
REQ-003,negative,Scenario: Audit event is not generated for failed password reset Given a user attempts to reset their password When the password reset fails Then no audit event is generated,"[""@negative""]"
REQ-003,regression,Scenario: Audit logs can be accessed for verification Given an audit event is generated When an admin accesses the audit logs Then the logs include the user ID and timestamp,"[""@regression""]"
REQ-001,positive,Scenario: User receives OTP via email for password reset Given a user requests a password reset When the system sends an OTP to the user's email Then the user receives the OTP email,"[""@positive""]"
REQ-001,negative,Scenario: User enters expired OTP Given a user has an expired OTP When the user attempts to reset the password with the expired OTP Then the system displays an error message,"[""@negative""]"
REQ-001,regression,Scenario: System handles invalid OTP Given a user enters an invalid OTP When the user submits the OTP for password reset Then the system rejects the OTP and prompts for re-entry,"[""@regression""]"
REQ-002,positive,Scenario: User is notified after exceeding password reset attempts Given a user has made 3 password reset attempts in an hour When the user tries another reset Then the system notifies the user of the limit,"[""@positive""]"
REQ-002,negative,Scenario: User exceeds password reset attempt limit Given a user has exceeded the password reset attempts When the user tries to reset the password again Then the system blocks the attempt and logs the event,"[""@negative""]"
REQ-002,regression,Scenario: System logs rate limiting events Given a user exceeds the password reset attempt limit When the system blocks further attempts Then the system logs the rate limiting event,"[""@regression""]"
REQ-003,positive,Scenario: Audit event generated for successful password reset Given a user successfully resets their password When the password reset is completed Then an audit event is generated with timestamp and user ID,"[""@positive""]"
REQ-003,negative,Scenario: Audit event not generated for failed password reset Given a user fails to reset their password When the password reset attempt is unsuccessful Then no audit event is generated,"[""@negative""]"
REQ-003,regression,Scenario: Audit logs are accessible for verification Given an audit event is generated for a password reset When an admin accesses the audit logs Then the logs are available and include the correct details,"[""@regression""]"
REQ-001,positive,Scenario: User receives OTP via email for password reset Given a user requests a password reset When the request is submitted Then the user receives an OTP via email,"[""@positive""]"
REQ-001,negative,Scenario: User does not receive OTP due to invalid email Given a user requests a password reset with an invalid email When the request is submitted Then the user does not receive an OTP,"[""@negative""]"
REQ-001,regression,Scenario: OTP expires after 10 minutes Given a user receives an OTP via email When 10 minutes have passed Then the OTP is expired,"[""@regression""]"
REQ-002,positive,Scenario: User successfully resets password with valid OTP Given a user has a valid OTP When the user enters the OTP to reset the password Then the password is successfully reset,"[""@positive""]"
REQ-002,negative,Scenario: User fails to reset password with expired OTP Given a user has an expired OTP When the user enters the OTP to reset the password Then the password reset fails,"[""@negative""]"
REQ-002,regression,Scenario: User fails to reset password with invalid OTP Given a user has an invalid OTP When the user enters the OTP to reset the password Then the password reset fails,"[""@regression""]"
REQ-003,positive,Scenario: User attempts password reset within limit Given a user attempts to reset the password When the attempts are within the limit of 3 per hour Then the password reset is allowed,"[""@positive""]"
REQ-003,negative,Scenario: User exceeds password reset attempt limit Given a user attempts to reset the password When the attempts exceed the limit of 3 per hour Then the user receives a notification about the limit,"[""@negative""]"
REQ-003,regression,Scenario: Password reset attempts are logged Given a user attempts to reset the password When the attempt is made Then the attempt is logged for monitoring,"[""@regression""]"
REQ-004,positive,Scenario: Audit event is generated for successful password reset Given a user successfully resets their password When the reset is completed Then an audit event is generated,"[""@positive""]"
REQ-004,negative,Scenario: Audit event is not generated for failed password reset Given a user fails to reset their password When the reset attempt fails Then no audit event is generated,"[""@negative""]"
REQ-004,regression,Scenario: Audit logs are accessible for verification Given an audit event is generated When the logs are accessed Then the logs are available for verification,"[""@regression""]"
REQ-001,positive,Scenario: User receives a one-time code via email for password reset Given a user requests a password reset When the request is processed Then the user receives a one-time code via email,"[""@positive""]"
REQ-001,negative,Scenario: User does not receive a one-time code if email is invalid Given a user requests a password reset with an invalid email When the request is processed Then the user does not receive a one-time code,"[""@negative""]"
REQ-001,regression,Scenario: User can reset password using a valid one-time code Given a user has a valid one-time code When the user enters the code to reset the password Then the password is successfully reset,"[""@regression""]"
REQ-002,positive,Scenario: User is limited to 3 password reset attempts per hour Given a user attempts to reset the password When the user makes 3 attempts in an hour Then further attempts are blocked,"[""@positive""]"
REQ-002,negative,Scenario: User receives notification after exceeding attempt limit Given a user has exceeded the password reset attempt limit When the user tries another reset Then the user receives a notification about the limit,"[""@negative""]"
REQ-002,regression,Scenario: Further attempts are blocked until rate limit resets Given a user has reached the password reset attempt limit When the user waits for the rate limit to reset Then the user can attempt password reset again,"[""@regression""]"
REQ-003,positive,Scenario: Audit event is generated upon successful password reset Given a user successfully resets their password When the reset is completed Then an audit event is generated,"[""@positive""]"
REQ-003,negative,Scenario: No audit event is generated for failed password reset Given a user fails to reset their password When the reset attempt is unsuccessful Then no audit event is generated,"[""@negative""]"
REQ-003,regression,Scenario: Audit logs are accessible for verification Given an audit event is generated When the logs are accessed Then the logs include user ID and timestamp,"[""@regression""]"
