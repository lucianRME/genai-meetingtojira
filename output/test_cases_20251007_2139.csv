LinkedRequirement,ScenarioType,Gherkin,Tags
REQ-001,positive,Scenario: User receives a one-time code via email Given a user requests a password reset When the request is processed Then the user receives a one-time code via email,"[""@positive""]"
REQ-001,negative,Scenario: One-time code expires after 10 minutes Given a user requests a password reset When 10 minutes have passed Then the one-time code expires,"[""@negative""]"
REQ-001,regression,Scenario: User resets password using a valid one-time code Given a user has a valid one-time code When the user enters the code to reset the password Then the password is successfully reset,"[""@regression""]"
REQ-002,positive,Scenario: User successfully resets password with a valid OTP Given a user has a valid OTP When the user enters the OTP Then the password is successfully reset,"[""@positive""]"
REQ-002,negative,Scenario: User fails to reset password with an expired OTP Given a user has an expired OTP When the user enters the OTP Then the password reset fails,"[""@negative""]"
REQ-002,regression,Scenario: User fails to reset password with an invalid OTP Given a user has an invalid OTP When the user enters the OTP Then the password reset fails,"[""@regression""]"
REQ-003,positive,Scenario: User can attempt password reset a maximum of 3 times per hour Given a user attempts password reset When the user attempts 3 times Then the user can no longer attempt within the hour,"[""@positive""]"
REQ-003,negative,Scenario: User receives an error message after exceeding maximum attempts Given a user has attempted password reset 3 times When the user attempts again Then an error message is displayed,"[""@negative""]"
REQ-003,regression,Scenario: Rate limiting resets after one hour Given a user has reached the maximum attempts When one hour has passed Then the user can attempt password reset again,"[""@regression""]"
REQ-004,positive,Scenario: An audit event is created upon successful password reset Given a user successfully resets their password When the reset is completed Then an audit event is created,"[""@positive""]"
REQ-004,negative,Scenario: Audit event includes user ID and timestamp Given a user successfully resets their password When the audit event is logged Then it includes the user ID and timestamp,"[""@negative""]"
REQ-004,regression,Scenario: Audit logs are accessible for verification purposes Given a password reset has occurred When accessing the audit logs Then the logs are available for verification,"[""@regression""]"
REQ-001,positive,Scenario: User receives a one-time code via email for password reset Given a user requests a password reset When the request is processed Then the user receives a one-time code via email,"[""@positive""]"
REQ-001,negative,Scenario: One-time code expires after 10 minutes Given a user receives a one-time code When 10 minutes have passed Then the one-time code is no longer valid,"[""@negative""]"
REQ-001,regression,Scenario: User can reset password using a valid one-time code Given a user has a valid one-time code When the user enters the code to reset the password Then the password is successfully reset,"[""@regression""]"
REQ-002,positive,Scenario: Successful OTP verification Given a user has a valid OTP When the user enters the OTP Then the OTP verification is successful,"[""@positive""]"
REQ-002,negative,Scenario: Expired OTP verification Given a user has an expired OTP When the user enters the OTP Then the OTP verification fails,"[""@negative""]"
REQ-002,regression,Scenario: Invalid OTP verification Given a user enters an invalid OTP When the OTP is processed Then the OTP verification fails,"[""@regression""]"
REQ-003,positive,Scenario: User is limited to 3 OTP attempts per hour Given a user attempts to enter OTP When the user reaches the 3rd attempt Then the user is limited from further attempts,"[""@positive""]"
REQ-003,negative,Scenario: Exceeding OTP attempt limit Given a user has exceeded 3 OTP attempts When the user tries another attempt Then the user receives an error message,"[""@negative""]"
REQ-003,regression,Scenario: Rate limiting is logged Given a user exceeds OTP attempts When the event is logged Then the log contains the rate limiting information,"[""@regression""]"
REQ-004,positive,Scenario: Audit event generated upon successful password reset Given a user successfully resets their password When the reset is completed Then an audit event is generated,"[""@positive""]"
REQ-004,negative,Scenario: Missing audit event after password reset Given a user successfully resets their password When no audit event is generated Then the system logs an error,"[""@negative""]"
REQ-004,regression,Scenario: Audit event includes user ID and timestamp Given an audit event is generated When the event is stored Then it includes user ID and timestamp,"[""@regression""]"
REQ-005,positive,Scenario: Existing login functionality is tested Given the existing login flow When regression tests are conducted Then the login functionality passes,"[""@positive""]"
REQ-005,negative,Scenario: New issues introduced in login flow Given the new password reset feature is implemented When regression tests are conducted Then no new issues are introduced,"[""@negative""]"
REQ-005,regression,Scenario: Regression test results are documented Given regression tests are completed When the results are reviewed Then the results are documented,"[""@regression""]"
